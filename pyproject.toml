[project]
name = "aivis-speech-engine"
version = "0.0.1"
requires-python = ">=3.11,<3.12"
dependencies = [
    "numpy>=1.26.4,<2",
    "fastapi-slim>=0.115.5,<0.116",
    "jinja2>=3.1.6,<4",
    "python-multipart>=0.0.20,<0.0.21",
    "uvicorn>=0.34.0,<0.35",
    "soundfile>=0.13.1,<0.14",
    "pyyaml>=6.0.1,<7",
    "pyworld-prebuilt>=0.3.5.post1,<0.4",
    "pyopenjtalk-plus>=0.4.1.post3,<0.5",
    "semver>=3.0.0,<4",
    "platformdirs>=4.2.0,<5",
    "soxr>=0.5.0,<0.6",
    "pydantic>=2.7.3,<3",
    "starlette>=0.45.3,<0.46",
    "jaconv>=0.3.4,<0.4",
    "httpx>=0.28.1,<0.29",
    "gputil>=1.4.0,<2",
    "psutil>=6.1.1,<7",
    "py-cpuinfo>=9.0.0,<10",
    "wmi>=1.5.1,<2 ; sys_platform == 'win32'",
    "sentry-sdk[fastapi]>=2.19.2,<3",
    "truststore>=0.10.0,<0.11",
    "aivmlib>=1.1.0,<2",
    "style-bert-vits2",
    "onnxruntime>=1.21.0,<2 ; (sys_platform != 'linux' or platform_machine != 'x86_64') and sys_platform != 'win32'",
    "onnxruntime-directml>=1.21.0,<2 ; sys_platform == 'win32'",
    "onnxruntime-gpu>=1.21.0,<2 ; sys_platform == 'linux' and platform_machine == 'x86_64'",
]

[tool.taskipy.tasks]
serve = "python run.py"
lint = "ruff check --fix ."
format = "ruff format ."
mypy = "mypy ."
typos = "typos"
test = "pytest"
update-snapshots = "pytest --snapshot-update"
update-licenses = "bash tools/create_venv_and_generate_licenses.bash"
build = "task update-licenses && pyinstaller --noconfirm run.spec"

[dependency-groups]
dev = [
    "mypy>=1.10.0,<2",
    "pytest>=8.2.0,<9",
    "coveralls>=4.0.1,<5",
    "httpx>=0.28.1,<0.29",
    "syrupy>=4.6.1,<5",
    "types-pyyaml>=6.0.12,<7",
    "pip-licenses==5.0.0",
    "pre-commit>=4.0.1,<5",
    "pip-audit>=2.7.3,<3",
    "ruff>=0.11.1,<0.12",
    "typos>=1.31.1,<2",
]
build = ["pyinstaller~=5.13", "pip-licenses==5.0.0", "taskipy>=1.12.2,<2"]

[tool.ruff]
target-version = "py311"

[tool.uv]
package = false
default-groups = ["dev", "build"]

[tool.uv.sources]
style-bert-vits2 = { git = "https://github.com/tsukumijima/Style-Bert-VITS2", rev = "4657f60ece2c8ceb274f2970c9e857693e79e495" }

[tool.hatch.build.targets.wheel]
packages = ["voicevox_engine"]
include = ["resources/**", "engine_manifest.json"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff.lint]
select = ["E", "F", "B", "I", "W", "UP", "D", "D213"]
ignore = [
    "E501", # line-too-long
    "D200", # AivisSpeech Engine ではコーディングスタイルに合わないため運用しない
    "D202", # AivisSpeech Engine ではコーディングスタイルに合わないため運用しない
    "D205", # AivisSpeech Engine ではコーディングスタイルに合わないため運用しない
    "D400", # missing-trailing-period。日本語の「。」に対応していないため。
    "D403", # first-word-uncapitalized。日本語とは無関係であるため。日英混合時の挙動に一貫性が無いため。
]
unfixable = [
    "F401", # unused-import
    "F841", # unused-variable
]

[tool.ruff.lint.per-file-ignores]
"test/**/test_*.py" = [
    "D103",
] # undocumented-public-function。pytest の対象 test_*() が D103 の対象になり、関数名から内容が自明でも docstring を強制されるため。

[tool.ruff.lint.isort]
known-first-party = ["voicevox_engine"]
known-third-party = ["numpy"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
docstring-code-format = true

[tool.mypy]
strict = true
plugins = "numpy.typing.mypy_plugin,pydantic.mypy"
python_version = "3.11"
exclude = ["dist"]
ignore_missing_imports = true
warn_unreachable = false
warn_unused_ignores = false

[tool.pytest.ini_options]
filterwarnings = ["ignore::pydantic.warnings.PydanticDeprecatedSince20"]

[tool.typos.default.extend-words]
datas = "datas" # PyInstaller's argument

[tool.typos.files]
extend-exclude = [
    "resources",
    "test/e2e/single_api/engine_info/__snapshots__/test_engine_manifest/test_get_engine_manifest_200.json",
    "poetry.*",
    "README.md",
]
